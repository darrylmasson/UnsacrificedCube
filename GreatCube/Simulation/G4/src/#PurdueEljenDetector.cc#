#include <G4Box.hh>
#include <G4Torus.hh>
//Visualisation
#include <G4Color.hh>
#include <G4VisAttributes.hh>
//Materials
#include <G4Material.hh>
//Other
#include <G4NistManager.hh>
#include <G4PVPlacement.hh>

#include <math.h>
#define pi 3.14159265359

 
map<G4String, G4double> PurdueEljenDetector::m_hGeometryParameters;

PurdueEljenDetector::PurdueEljenDetector
() 
{
  DefineMaterials();
  DefineGeometryParameters();
  Construct();
}

PurdueEljenDetector::~PurdueEljenDetector()
{
  delete m_pScintillatorLogicalVolume

   
}  
 
void PurdueEljenDetector::DefineMaterials() 
{
  G4NistManager* pNistManager = G4NistManager::Instance();
  
  //===============================Elements====================================
  
  G4Element *C  = pNistManager->FindOrBuildElement("C");
  G4Element *H  = pNistManager->FindOrBuildElement("H");;
  G4Element *Al = pNistManager->FindOrBuildElement("Al");
 
         
  //===============================Materials===================================

  double fractionmass;
  int atomnumber;

  //-------------------------------Aluminium-----------------------------------
  pNistManager->FindOrBuildMaterial("G4_Al");
  
  //----------------------------1.4571 NiCrSteel-------------------------------
  //List of fractions by mass obtained from datasheets
  G4Material *NiCrSteel = 
    new G4Material("NiCrSteel", .874*g/cm3, 2, kStateLiquid);
  NiCrSteel->AddElement(Fe, fractionmass=0.5811);

  //--------------------------------Deuterium Gas------------------------------
  G4Material *DeuteriumGas = 
    new G4Material("DeuteriumGas", 0.08*g/m3, 2, kStateGas, 308.15*kelvin,
		   0.0297*bar);
  DeuteriumGas->AddElement(H, atomnumber=1212);
  DeuteriumGas->AddElement(C, atomnumber=1000); 
}

void PurdueEljenDetector::DefineGeometryParameters() 
{
  
}
  
//==============================Neutron Generator==============================

G4VPhysicalVolume* PurdueEljenDetector::Construct()
{
 return m_pDetectorLogicalVolume; 
}



G4double PurdueEljenDetector::GetGeometryParameter(const char *szParameter)
{
  if (m_hGeometryParameters.find(szParameter) != m_hGeometryParameters.end()){
    return m_hGeometryParameters[szParameter];
  }
  else {
    G4cout<< "Parameter: " << szParameter << " is not defined!!!!!" << G4endl;
    return 0;
  }
}
